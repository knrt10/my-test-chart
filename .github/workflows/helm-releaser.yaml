name: Release Charts

# See https://github.com/helm/chart-releaser-action

on:
  push:
    branches:
      - main
      - gh-pages
    paths:
      - README.md
  # For manual dispatch
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    permissions:
      contents: write # need to write a commit to the repo
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-version: 'v2.2.4'

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh
      
      - name: Decode and Set up Cosign Key
        run: |
          mkdir -p .cosign
          echo "${{ secrets.COSIGN_KEY_BASE64 }}" | base64 -d > .cosign/cosign.key
          echo "COSIGN_KEY_PATH=.cosign/cosign.key" >> $GITHUB_ENV
          echo "COSIGN_PASSWORD=${{ secrets.COSIGN_PASSWORD }}" >> $GITHUB_ENV
        env:
          COSIGN_KEY_BASE64: ${{ secrets.COSIGN_KEY_BASE64 }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Extract Chart Version and Name
        id: extract_version
        run: |
          CHART_FILE="charts/templates/Chart.yaml"
          CHART_VERSION=$(grep 'version:' $CHART_FILE | awk '{print $2}')
          CHART_NAME=$(grep 'name:' $CHART_FILE | awk '{print $2}')
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV
          echo "CHART_NAME=$CHART_NAME" >> $GITHUB_ENV

      - name: Package and Signing Helm Charts
        run: |
          echo "Packaging Helm Charts"
          mkdir -p .cr-release-packages
          helm package charts/* -d .cr-release-packages/

          echo "Signing packages in .cr-release-packages/"
          for chart_file in .cr-release-packages/*.tgz; do
            if [ -f "$chart_file" ]; then
              echo "Signing: $chart_file"
              cosign sign-blob --key .cosign/cosign.key --output-signature "${chart_file}.sig" "$chart_file" -y
            else
              echo "Chart package not found: $chart_file"
            fi
          done

      - name: Prepare Helm Chart Repo
        run: |
          helm repo index . --url https://knrt10.github.io/my-test-chart/

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@a917fd15b20e8b64b94d9158ad54cd6345335584 # v1.6.0
        env:
          CR_TOKEN: "${{ github.token }}"
          CR_SIGN: false # Let Cosign handle signing

      - name: Upload Signed Files to Release
        run: |
          for file in .cr-release-packages/*.sig; do
            mv "$file" ".cr-release-packages/$(basename "$file" .tgz.sig)-${{ steps.extract_version.outputs.CHART_VERSION }}.tgz.sig"
          done
          gh release create "${CHART_NAME}-${CHART_VERSION}" -t "Release $CHART_NAME $CHART_VERSION" -n "Automated release of $CHART_NAME version $CHART_VERSION." .cr-release-packages/*.tgz .cr-release-packages/*.sig

      - name: Clean Up
        run: |
          rm -rf .cosign
          rm -rf .cr-release-packages
